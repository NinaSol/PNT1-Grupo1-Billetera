@model IEnumerable<Billetera2.Models.Movimiento>

@{ ViewData["Title"] = "Mis Movimientos"; }


<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<h1>Mis Movimientos</h1>
<br />


<div id="pie" class="justify-content-center">
    <div style="display:flex;">
        <div id='myDiv' class="ml-auto mr-auto"></div>
    </div>
</div>

<p style="display:flex;">
    <a class="btn btn-primary  ml-auto" asp-action="Create" asp-route-id="@ViewBag.UsuarioID">Create Nuevo Movimiento</a>
</p>

<table id="table">
</table>

<script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
<script>
    $(function () {
        $('#table').bootstrapTable({
            url: '/Movimiento/GetAllMovimientos',
            pageSize: '5',
            search: true,
            pagination: true,
            filterControl: true,
            filterShowClear: true,
            method: 'get',
            columns: [
                {
                    field: 'monto',
                    title: 'Monto',
                    formatter: precio,
                    sortable: true
                },
                {
                    field: 'descripcion',
                    title: 'Descripcion',
                    filterControl: 'input',
                    sortable: true
                },
                {
                    field: 'tipoMovimiento',
                    title: 'Tipo Movimiento',
                    filterControl: 'select',
                    formatter: tipo,
                    sortable: true
                },
                {
                    field: 'fecha',
                    title: 'Fecha',
                    formatter: dateFormat,
                    sortable: true
                },
                {
                    field: 'id',
                    title: 'Acciones',
                    formatter: operateFormatter
                }
            ]
        })
    })

    function dateFormat(value, row, index) {
        return moment(value).format('DD/MM/YYYY');
    }

    function operateFormatter(value, row, index) {
        return [
            `<a class="btn btn-primary" href="Movimiento/Edit/${value}" >Editar</a>`,
            `<a class="btn btn-danger ml-3" href="Movimiento/Delete/${value}">Eliminar</a>`
        ].join('');


        window.operateEvents = {
            'click .edit': function (e, value, row, index) {
            },
            'click .remove': function (e, value, row, index) {
            }
        }
    };



    function precio(value) {
        return `${value}`
    }

    function tipo(value) {
        if (value == "1") {
            return `Egreso`
        } else {
            return `Ingreso`
        }
    }


</script>

<script>

    var layout = {
        height: 400,
        width: 500,
        paper_bgcolor: "transparent"
    };




    //make the fetch and return response data as json
    async function getData() {
        let url = '/Movimiento/GetAllMovimientos';
        try {
            let resp = await fetch(url);
            return await resp.json();
        } catch (error) {
            console.log(error);
        }
    }

    //do whatever you want with the data response
    async function myFunc() {
        let data = await getData();
        var ingreso = 0;
        var egreso = 0;

        if (data.length == 0) {
            $("#pie").hide();
        }

        data.map(e => {
            if (e.tipoMovimiento == "1") {
                egreso += e.monto;
            } else {
                ingreso += e.monto;
            }
        })

        var cosas = {
            values: [ingreso, egreso],
            labels: ["Ingresos", 'Egresos'],
            type: 'pie'
        }
        //do some stuff with your data here
        Plotly.newPlot('myDiv', [cosas], layout);
    }

    //call the function
    myFunc();
</script>